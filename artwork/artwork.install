<?php // remove me
function artwork_schema() {
  $schema['artwork'] = array(
    'description' => 'The base table for artworks.',
    'fields' => array(
      'aid' => array(
        'description' => 'The primary identifier for an artwork.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'vid' => array(
         'description' => 'The current {artwork_revision}.vid version identifier.',
         'type' => 'int',
         'unsigned' => TRUE,
         'not null' => TRUE,
         'default' => 0,
       ),
      'type' => array(
         'description' => 'The {artwork_type} of this artwork.',
         'type' => 'varchar',
         'length' => 32,
         'not null' => TRUE,
         'default' => '',
       ),
       'title' => array(
         'description' => 'The title of this artwork.',
         'type' => 'varchar',
         'length' => 255,
         'not null' => TRUE,
         'default' => '',
       ),
       'created' => array(
         'description' => 'The Unix timestamp when the artwork was created.',
         'type' => 'int',
         'not null' => TRUE,
         'default' => 0,
       ),
       'changed' => array(
          'description' => 'The Unix timestamp when the artwork was most recently saved.',
           'type' => 'int',
           'not null' => TRUE,
           'default' => 0,
       ),
     ),
     'unique keys' => array(
       'aid_vid' => array('aid', 'vid'),
       'aid'     => array('aid')
      ),
       'primary key' => array('aid'),
  );


  $schema['artwork_revision'] = array(
    'description' => 'Stores information about each saved version of an {artwork}.',
    'fields' => array(
      'aid' => array(
        'description' => 'The {artwork} this version belongs to.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'vid' => array(
        'description' => 'The primary identifier for this version.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'title' => array(
        'description' => 'The title of this version.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'created' => array(
        'description' => 'The Unix timestamp when the artwork was created.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'indexes' => array(
      'aid' => array('aid'),
    ),
    'primary key' => array('vid'),
    'foreign keys' => array(
      'artwork' => array(
        'table' => 'artwork',
        'columns' => array(
          'aid' => 'aid',
        ),
      ),
    ),
  );


  return $schema;
}


/**
  * Implements hook_entity_info().
  */
function artwork_entity_info() {
  $return['artwork'] = array(
    'label' => t('Artwork'),
    'controller class' => 'ArtworkController',
    'base table' => 'artwork',
    'revision table' => 'artwork_revision',
    'uri callback' => 'artwork_uri',
    'fieldable' => TRUE,
    'entity keys' => array(
      'id' => 'aid',
      'revision' => 'vid',
      'bundle' => 'type',
      'label' => 'title',
    ),
    'bundle keys' => array(
      'bundle' => 'type',
    ),
    'static cache' => TRUE,
    'bundles' => array(),
    'view modes' => array(
      'full' => array(
        'label' => t('Full content'),
        'custom settings' => FALSE,
      ),
       'teaser' => array(
         'label' => t('Teaser'),
         'custom settings' => FALSE,
       ),
    ),
  );

  foreach (artwork_types() as $type => $info) {
     $return['artwork']['bundles'][$type] = array(
       'label' => $info->name,
       'admin' => array(
       'path' => 'admin/structure/artworks/manage/%artwork_type',
       'real path' => 'admin/structure/artworks/manage/' .
                      str_replace('_', '-', $type),
       'bundle argument' => 4,
       'access arguments' => array('administer artworks'),
       ),
     );
  }

  return $return;
}

function artwork_types() {
  $types = &drupal_static(__FUNCTION__);
    if (empty($types)) {
      $types['painting'] = (object)array(
        'type' => 'painting',
        'name' => t('Painting'),
        'description' => t('A picture made with paint.')
      );
      $types['sculpture'] = (object)array(
        'type' => 'sculpture',
        'name' => t('Sculpture'),
        'description' => t('A carving made out of stone or wood.')
      );
    }

   return $types;
}

function artwork_type_load($type) {
  $types = artwork_types();
  $type = str_replace('-', '_', $type);
  return isset($types[$type]) ? $types[$type] : FALSE;
}